-- This file was generated using Luraph Obfuscator v13.5.6

return(function(mG,UG,hG,sG,wG,oG,io,jG,Vo,ZG,MG,DG,bG,pG,YG,OG,QG,cG,TG,dG,vG,no,NG,SG,zG,xG,JG,BG,HG,kG,qG,rG,AG,gG,LG,KG,RG,PG,Io,CG,EG,yG,XG,GG,WG,V,...)local b,K=nil,nil;local i,F=SG,jG;do for pp=0,0x01 do do if pp==0 then do b=string.gsub;end;else K=0X1;end;end;end;end;local f,l=nil,(nil);for W_=0X0000,0X01 do if W_~=0X0 then l=vG;else f=bG;end;end;local ao,e,j,uG,v=0x1,nil,nil,nil,nil;while 0X545960f5 do if ao<=0X1 then do if ao~=0X0 then e=DG;do ao=0X00002;end;else uG=1;ao=0X0003;end;end;elseif ao==2 then j=wG.rep;do ao=0;end;else v=dG;break;end;end;local a=yG;local U,D,Y=UG,HG,YG or JG;local w,E=setmetatable,EG;ao=0X0000;local X,J,FG,z,P,m=nil,nil,nil,nil,nil,nil;while ao<0X6 do do if not(ao<=0X2)then if ao<=3 then J=PG;ao=0x5;else if ao~=0X04 then do FG={};end;ao=0x4;else do z={0X00001,7,KG};end;do ao=0x1;end;end;end;else do if not(ao<=0)then do if ao~=0x1 then m=CG;ao=6;else P=(X and X()or pG);ao=0X2;end;end;else do X=XG;end;ao=0X3;end;end;end;end;end;ao=1;local p,R=nil,nil;do while ao~=2 do if ao~=0X000 then pao=0X0;else do R=0X100000000;end;do ao=0x2;end;end;end;end;local q=m-0X0001;ao=0X0001;local u,S,C=nil,nil,nil;while ao<=3 do if ao<=1 then if ao==0X0 then S=wG.char;ao=0X3;else u=hG;do ao=0;end;end;else do if ao~=2 then ao=0X2;else p=b(l(p,0X5),"..",function(MP)do if e(MP,MG)~=0X000048 then local PJ,rJ=1,nil;repeat do if PJ==0x0 then do if C then local yv,ev=0X002,nil;repeat if not(yv<=0x0000)then if yv~=0X01 then do ev=j(rJ,C);end;do yv=0X00000;end;else do return ev;end;end;else C=nil;do yv=1;end;end;until false;else return rJ;end;end;break;else do rJ=S(a(MP,0X10));end;PJ=0;end;end;until false;else local VE=0X0;while true do do if VE==0X00 then C=a(l(MP,1,1));VE=1;else return'';end;end;end;end;end;end);ao=4;end;end;end;end;local r={[0X00000]={[0]=0,1,0x2,3,mG,RG,0X6,0X0007,0x8,9,0Xa,0XB,12,0X0000D,0XE,15},{[0]=0x1,0X0,3,2,RG,4,7,0X6,0X9,8,11,ZG,13,12,15,0Xe},{[0]=0X2,0x03,0X0,1,6,0X7,0X0004,5,10,11,8,9,14,15,12,13},{[0X0]=0X03,2,0X001,0,7,0X6,0X5,0X00004,11,10,9,kG,0X0f,14,13,12},{[0x0]=0X4,0X5,0x06,7,0,qG,0X2,3,0XC,13,0XE,0Xf,0x8,0x0009,0XA,11},{[0]=5,4,0X7,0X6,qG,0X0,3,0X2,0XD,12,0XF,0Xe,9,0X8,0X0B,10},{[0X0000]=6,7,0X4,0X5,2,3,0,1,0XE,0Xf,12,gG,10,11,0X8,0X9},{[0]=7,0X0006,5,0X4,0X3,2,qG,0X00,0X0F,0xE,13,0x0000c,0X00B,0XA,0X9,0x8},{[0]=0x8,QG,ZG,0X000b,12,13,14,0X0F,oG,0x00001,2,3,0X4,RG,6,7},{[0]=9,8,OG,0x0a,13,0Xc,0Xf,0XE,1,0,3,2,5,4,0x0007,6},{[0]=0X0000a,0Xb,8,9,rG,15,0Xc,13,2,0X003,0,0X01,6,7,0X4,5},{[0]=OG,10,0X009,0X08,0XF,0XE,gG,0X00c,3,0X2,0X01,0,0X07,6,RG,4},{[0x0]=12,13,0x0e,15,8,0x9,10,0XB,4,0X005,6,7,0,0X00001,2,0x0003},{[0X0]=13,12,15,14,9,8,0Xb,10,0X005,0x0004,7,0X6,1,0,0X00003,0X2},{[0X0]=0X00E,15,0Xc,0XD,10,0Xb,8,9,0X00006,0x7,4,0x0005,2,0X3,0X000,0X00001},{[0X0]=15,0X0000E,0X00d,xG,11,0Xa,9,0X8,0X7,6,5,4,3,2,qG,0X0000}};ao=0X000;local Z,h=nil,nil;while ao<2 do do if ao==0x0 then Z=0X2^52;ao=0X1;else h=function()local I5=(nil);for BJ=0,0X2 do if BJ<=0X0 then I5=e(p,K,K);else do if BJ==1 then K=K+0X00001;else return I5;end;end;end;end;end;ao=2;end;end;end;local t,y=error,(next);local M=(function()local OR,yR,uR,AR,SR=0X2,nil,nil,nil,(nil);repeat do if OR<=0X000 then K=K+4;OR=0X1;elseif OR~=0x00001 then do yR,uR,AR,SR=e(p,K,K+0X03);end;do OR=0;end;else do return SR*0x01000000+AR*65536+uR*256+yR;end;end;end;until false;end);local k=R-1;local g=({[0x000]=0x0001});local o=(function()local Ec,Mc,pc=1,nil,nil;do while 0.6230065617987633 do if not(Ec<=0X0)then if Ec~=0x1 then if pc>=m then pc=pc-R;end;do Ec=0X0;end;else Mc,pc=M(),M();Ec=0x2;end;else return pc*R+Mc;end;end;end;end);local I=assert;do local VV,zV=0,(nil);while VV<0X2 do if VV~=0 then do for u6=0X1,0X00001f do local F6=(1);while true do if F6~=0X0 then(g)[u6]=zV;F6=0;else zV=zV*2;break;end;end;end;end;VV=0X02;else do zV=0x2;end;do VV=0X01;end;end;end;end;local Q=function(Mj,Zj,Xj)local Aj,mj=0x2,(nil);repeat if not(Aj<=0X0)then if Aj~=1 then mj=(Mj/g[Zj])%g[Xj];do Aj=1;end;else mj=mj-mj%0X0001;Aj=0X0;end;else return mj;end;until false;end;local O=(function()local Fd,md,Ed,Wd,Nd,Qd,Gd=2,nil,nil,nil,nil,nil,(nil);while 0.8770616848255844 do if Fd<=0X3 then if not(Fd<=1)then if Fd==0x2 then md=M();do Fd=6;end;else if md==0X00 and Ed==0x0 then return 0;end;Fd=0X04;end;else if Fd~=0X0 then Nd=(-qG)^Q(Ed,31,1);Fd=0;else Qd=Q(Ed,0x14,0X000B);do Fd=7;end;end;end;elseif not(Fd<=5)then if not(Fd<=0X6)then if Fd==0X0007 then Gd=Q(Ed,0X00000,0X14)*R+md;Fd=8;else if Qd==0X0 then if Gd==0X00000 then return Nd*0x0000;else local PR=(1);repeat do if PR~=0 then Qd=1;do PR=0x000;end;else Wd=0;PR=2;end;end;until PR==0X2;end;elseif Qd~=NG then else if Gd~=0X0 then return Nd*(1/0X0);else return Nd*(0x0/0);end;end;Fd=0X5;end;else do Ed=M();end;Fd=0x3;end;else if Fd==0x4 then Wd=1;Fd=1;else return Nd*(2^(Qd-1023))*(Gd/Z+Wd);end;end;end;end);local x=(bit or bit32);local N=(x and x.bxor or function(UU,gU)local iU,SU=nil,(nil);local lU=2;while-0X0338aa066 do if lU<=0X2 then if lU<=0 then SU=oG;do lU=1;end;else do if lU==1 then while UU>oG and gU>0 do local b0,I0=nil,nil;for pK=0X0,4 do if pK<=1 then if pK~=0 then do I0=gU%0x10;end;else do b0=UU%sG;end;end;else if pK<=0X0002 then SU=SU+r[b0][I0]*iU;else do if pK~=3 then gU=(gU-I0)/0X000010;else UU=(UU-b0)/0x000010;end;end;end;end;end;iU=iU*0x0010;end;do lU=4;end;else UU=UU%R;do lU=0X3;end;end;end;end;else if lU<=3 then do iU=0X1;end;lU=5;else do if lU==0X4 then return SU+UU*iU+gU*iU;else gU=gU%R;lU=0x00;end;end;end;end;end;end);local s=(x and x[BG]or function(lu,Mu)lu=lu%R;do for C7=0,1 do if C7~=0x00 then do return((lu+Mu)-N(lu,Mu))/2;end;else Mu=Mu%R;end;end;end;end);local B=(x and x.bor or function(Hx,Mx)for GL=0,0X2 do do if GL<=0X0 then Hx=Hx%R;else if GL~=0X1 then do return k-s(k-Hx,k-Mx);end;else Mx=Mx%R;end;end;end;end;end);local A,H=x and x[WG],(AG);local L,W=x and x[LG]or function(RY)return k-(RY%R);end,x and x.lshift;W=W or function(Yi,Ki)local Pi=(0x1);do while true do if Pi==0 then if Ki<0 then return A(Yi,-Ki);end;break;else do if Ki>=32 then do return 0;end;end;end;Pi=0x0;end;end;end;return(Yi*g[Ki])%R;end;local d=rawget;do A=A or function(eE,OE)local mE=nil;for Dp=0,0X03 do if not(Dp<=1)then if Dp==0x2 then mE=(eE%R/g[OE]);else return mE-mE%1;end;elseif Dp==0X0 then do if OE>=0X0020 then do return 0X0;end;end;end;else if not(OE<0)then else return W(eE,-OE);end;end;end;end;end;local c=function()local sq,Bq=0,(0X00);while 0.8814999790285053 do local qX=(e(p,K,K));K=K+0x00001;sq=B(sq,W(s(qX,127),Bq));do if s(qX,0X0080)==0 then return sq;end;end;Bq=Bq+0X007;end;end;local G,T=nil,nil;for pM=0X0,1 do if pM==0X0000 then do G={[0X0001]=5,[0x04]=zG,[4]=0X00008,[6]=2,[0x5]=3,[8]=0x9,[0x002]=9,[zG]=3,[3]=0x00006};end;else T=function()local RH=(c());if not(RH>q)then else do return RH-R;end;end;return RH;end;end;end;local nG=(h());local VG=h();local IG=function(Oa)local Va,Ea,za,ga,wa=nil,nil,nil,nil,(nil);for PF=0,6 do if not(PF<=0X002)then if PF<=4 then if PF==0x3 then do ga=N(Va[0x3],VG);end;else wa=N(Va[0X4],VG);end;else do if PF==5 then VG=(53*VG+Oa)%256;else K=K+0X4;end;end;end;else if PF<=0 then Va={e(p,K,K+3)};elseif PF~=0x1 then za=N(Va[2],VG);else do Ea=N(Va[0x0001],VG);end;end;end;end;do return wa*16777216+ga*GG+za*256+Ea;end;end;do ao=3;end;local aG,iG,fG=nil,nil,(nil);while ao<4 do if ao<=1 then do if ao~=0x0000 then ao=0x004;else fG={};ao=1;end;end;else if ao~=2 then aG=function(...)return i(cG,...),{...};end;ao=2;else iG=function(b5)local i5=(M());local l5,D5="",1;repeat if D5<=0X0 then do K=K+i5;end;D5=2;else if D5==1 then for cb=1,i5,0X1F3d do local Vb,Xb,Kb=cb+0x1F3d-1,0X00003,nil;repeat do if Xb<=1 then if Xb==0 then Kb={e(p,K+cb-0x00001,K+Vb-1)};do Xb=0x2;end;else l5=l5..S(Y(Kb));break;end;else if Xb==0X2 then for Cc=qG,#Kb do local tc=0X1;repeat if tc==0X0 then nG=(b5*nG+203)%0X100;break;else do Kb[Cc]=N(Kb[Cc],nG);end;tc=0X000;end;until(false);end;Xb=1;else if Vb>i5 then Vb=i5;end;Xb=0X0000;end;end;end;until false;end;D5=0;else do return l5;end;end;end;until(false);end;ao=0X0;end;end;end;local function tG(m1,t1,S1)local w1=(m1[5]);local X1,R1=m1[0X2],(m1[3]);local K1,C1=m1[4],(m1[0X7]);local U1,e1,H1=m1[9],m1[6],m1[0X1];local Y1=w({},{__mode="v"});local I1=nil;do I1=function(...)local KZ,kZ=1,{};local wZ=(X and X()or _ENV);local YZ,qZ=aG(...);local sZ={[2]=kZ,[1]=m1};YZ=YZ-1;local pZ=(0x0);for Km=0,YZ do if X1>Km then kZ[Km]=qZ[Km+0X0001];else break;end;end;local MZ=(wZ==P and t1 or wZ);do if not e1 then qZ=nil;else if H1 then(kZ)[X1]={n=YZ>=X1 and YZ-X1+0x1 or 0,Y(qZ,X1+1,YZ+0x1)};end;end;end;if MZ==wZ then else if J then(J)(I1,MZ);else _ENV=MZ;end;end;local yZ,rZ,nZ,QZ=F(function()repeat local ZL=(K1[KZ]);local VL=(ZL[0X4]);KZ=KZ+1;if VL>=0X30 then if VL>=72 then if not(VL>=84)then if not(VL<78)then if not(VL>=0x51)then if VL>=0X04f then do if VL==80 then MZ[ZL[2]]=kZ[ZL[0x007]];else local Mw=(ZL[0x0007]);(kZ)[Mw]=kZ[Mw](kZ[Mw+1]);pZ=Mw;end;end;else local lu=(C1[ZL[0X6]]);local Du,Ku=lu[0X0008],nil;local Vu=#Du;if Vu>0 then do Ku={};end;for N9=0x01,Vu do local c9=Du[N9];if c9[1]==0X00 then do(Ku)[N9-1]={kZ,c9[2]};end;else do Ku[N9-0x1]=S1[c9[2]];end;end;end;(D)(Y1,Ku);end;(kZ)[ZL[7]]=tG(lu,MZ,Ku);end;else if VL>=0x52 then if VL~=0X53 then local H3=(ZL[0x7]);(kZ)[H3]=kZ[H3](Y(kZ,H3+0X1,pZ));pZ=H3;else do if ZL[1]==0X42 then KZ=KZ-1;(K1)[KZ]={[4]=91,[7]=(ZL[7]-0X33),[6]=(ZL[6]-0X033)};elseif ZL[1]==0X00eb then do KZ=KZ-1;end;do K1[KZ]={[0X6]=(ZL[0x00006]-136),[4]=53,[7]=(ZL[0x07]-0X88)};end;elseif ZL[0X1]~=0XAD then kZ[ZL[0X7]]=-kZ[ZL[6]];else do KZ=KZ-1;end;(K1)[KZ]={[4]=91,[0X6]=(ZL[6]-0X078),[0X7]=(ZL[7]-120)};end;end;end;else if not(ZL[0x0002]<kZ[ZL[1]])then do KZ=ZL[7];end;end;end;end;else if VL<75 then if not(VL>=0X000049)then do(kZ)[ZL[0X00007]]=kZ[ZL[0X6]]%ZL[5];end;else if VL~=0X00004a then kZ[ZL[0X7]]=kZ[ZL[6]]==kZ[ZL[0X0001]];else local vF=ZL[7];(kZ[vF])(Y(kZ,vF+0X01,pZ));pZ=vF-0x1;end;end;else if VL<0X0004c then kZ[ZL[0X07]]=nil;else if VL~=0X0004d then KZ=ZL[6];else local wU=(ZL[0x7]);kZ[wU](kZ[wU+0X1]);pZ=wU-0x1;end;end;end;end;else if VL<90 then if not(VL>=0X57)then do if not(VL<0X55)then if VL~=86 then if ZL[0X001]~=118 then local I8,i8=YZ-X1,ZL[0x00007];do if not(I8<0)then else do I8=-0X1;end;end;end;for b2=i8,i8+I8 do kZ[b2]=qZ[X1+(b2-i8)+0X1];end;pZ=i8+I8;else do KZ=KZ-1;end;(K1)[KZ]={[0x06]=(ZL[6]-0X57),[7]=(ZL[0X7]-87),[0X004]=0x005D};end;else repeat local LJ,yJ=Y1,kZ;if not(#LJ>0X00)then else local hb={};for Hq,nq in y,LJ do for Qu,Nu in y,nq do if not(Nu[1]==yJ and Nu[0X2]>=0X0)then else local Wf=Nu[0x2];do if not(not hb[Wf])then else(hb)[Wf]={yJ[Wf]};end;end;(Nu)[1]=hb[Wf];(Nu)[2]=1;end;end;end;end;until'\093';return true,ZL[7],0x0;end;else kZ[ZL[7]]=sZ[ZL[0X006]];end;end;else if VL<88 then do(kZ)[ZL[0x7]]=kZ[ZL[6]]/ZL[5];end;else if VL~=0X59 then(kZ)[ZL[7]]=false;else pZ=ZL[7];(kZ[pZ])();pZ=pZ-1;end;end;end;else if not(VL<93)then if VL>=95 then do if VL==0X60 then kZ[ZL[7]]=kZ[ZL[6]]*ZL[0X5];else(kZ)[ZL[0X7]]=A(kZ[ZL[6]],kZ[ZL[0X1]]);end;end;else do if VL==94 then kZ[ZL[7]]=kZ[ZL[0X0006]]/kZ[ZL[0X1]];else(kZ)[ZL[0x007]]=#kZ[ZL[0x6]];end;end;end;else if not(VL<0X5b)then if VL~=92 then if ZL[0x1]==0X14 then KZ=KZ-1;(K1)[KZ]={[6]=(ZL[0X06]-153),[0X04]=0X46,[0x7]=(ZL[0X7]-153)};else if ZL[1]==6 then KZ=KZ-1;(K1)[KZ]={[0X4]=0X26,[0X06]=(ZL[6]-60),[7]=(ZL[7]-60)};else repeat local JX,cX=Y1,(kZ);if not(#JX>0)then else local Sh={};for FZ,EZ in y,JX do for Rd,md in y,EZ do if md[0X001]==cX and md[2]>=0 then local kz=(md[0X2]);if not Sh[kz]then(Sh)[kz]={cX[kz]};end;(md)[1]=Sh[kz];do(md)[0X2]=1;end;end;end;end;end;until-1483281192;do return;end;end;end;else local ME=ZL[7];local WE=(U(function(...)H();for XA,EA in...do H(true,XA,EA);end;end));WE(kZ[ME],kZ[ME+1],kZ[ME+0X2]);do pZ=ME;end;kZ[ME]=WE;KZ=ZL[0x06];end;else local mq=ZL[0X007];local Jq,aq,Cq=kZ[mq]();do if not(Jq)then else do(kZ)[mq+0x1]=aq;end;(kZ)[mq+2]=Cq;KZ=ZL[0x6];end;end;end;end;end;end;else do if VL>=0x00003C then if VL<0X0042 then if not(VL<63)then do if not(VL<0X40)then do if VL==0X000041 then(kZ)[ZL[7]]=kZ[ZL[0X6]][ZL[5]];else local yc=(ZL[0x7]);local Hc,kc=kZ[yc],kZ[yc+1];local Tc=(kZ[yc+2]);do(kZ)[yc]=U(function()for L6=Hc,kc,Tc do H(true,L6);end;end);end;KZ=ZL[6];end;end;else kZ[ZL[7]]=kZ[ZL[6]]>=kZ[ZL[0X0001]];end;end;else do if not(VL<0x3d)then if VL==62 then kZ[ZL[0X7]]=kZ[ZL[0X00006]][kZ[ZL[0X1]]];else kZ[ZL[7]]=kZ[ZL[6]]>kZ[ZL[0x001]];end;else kZ[ZL[0x00007]][ZL[2]]=kZ[ZL[0X1]];end;end;end;else if VL>=69 then if VL>=0x46 then if VL==0x047 then do(kZ)[ZL[0X0007]]=kZ[ZL[0X00006]]~=ZL[0x5];end;else do if ZL[1]==0x070 then KZ=KZ-0X1;K1[KZ]={[7]=(ZL[7]-97),[0X6]=(ZL[0x6]-0X00061),[0X4]=0X4b};else do(kZ)[ZL[0x0007]]=kZ[ZL[6]];end;end;end;end;else kZ[ZL[7]]=kZ[ZL[6]]^kZ[ZL[1]];end;else if VL>=0X43 then do if VL==68 then(kZ)[ZL[7]]=kZ[ZL[6]]+ZL[5];else kZ[ZL[0X00007]]=kZ[ZL[0x0006]]-kZ[ZL[1]];end;end;else do repeat local iS,SS=Y1,kZ;if not(#iS>0X0)then else local nS={};for yA,kA in y,iS do for AZ,JZ in y,kA do do if JZ[1]==SS and JZ[0X2]>=0X0000 then local yU=JZ[0X2];do if not nS[yU]then nS[yU]={SS[yU]};end;end;do JZ[1]=nS[yU];end;(JZ)[2]=1;end;end;end;end;end;until true;end;return true,ZL[7],0x001;end;end;end;elseif VL<0X36 then if not(VL>=51)then if not(VL<49)then if VL==50 then if not(not(ZL[0x2]<=kZ[ZL[1]]))then else do KZ=ZL[7];end;end;else if ZL[0X0001]==28 then do KZ=KZ-1;end;(K1)[KZ]={[0x00004]=91,[6]=(ZL[0X6]-105),[7]=(ZL[7]-105)};else local Rm=ZL[0X00007];for Nj=Rm,Rm+(ZL[0x6]-0x1)do do kZ[Nj]=qZ[X1+(Nj-Rm)+1];end;end;end;end;else if kZ[ZL[6]]==kZ[ZL[0X1]]then else do KZ=ZL[7];end;end;end;else if VL<52 then if ZL[0X1]==3 then KZ=KZ-0x1;K1[KZ]={[6]=(ZL[0X0006]-0Xdc),[7]=(ZL[0x007]-220),[0X004]=0X4B};else repeat local q1,d1,N1=Y1,kZ,ZL[0X07];if#q1>0 then local rU=({});do for np,Vp in y,q1 do do for PA,SA in y,Vp do if SA[0x1]==d1 and SA[2]>=N1 then local lb=SA[2];do if not rU[lb]then rU[lb]={d1[lb]};end;end;(SA)[0x1]=rU[lb];SA[0X2]=1;end;end;end;end;end;end;until true;end;else if VL==0X35 then repeat local rt,Xt=Y1,(kZ);do if#rt>0 then local vt={};for zr,sr in y,rt do do for V2,n2 in y,sr do if n2[1]==Xt and n2[2]>=0X0 then local NZ=n2[0x2];do if not(not vt[NZ])then else(vt)[NZ]={Xt[NZ]};end;end;n2[1]=vt[NZ];n2[2]=0x1;end;end;end;end;end;end;until true;return false,ZL[7],pZ;else local NU=(kZ[ZL[0x6]]/kZ[ZL[1]]);(kZ)[ZL[0X07]]=NU-NU%0x001;end;end;end;else if VL>=57 then if VL<58 then(kZ)[ZL[7]]=MZ[ZL[0X0002]];else if VL==0X3B then if kZ[ZL[6]]~=ZL[5]then else KZ=ZL[0X7];end;else kZ[ZL[7]]=W(kZ[ZL[6]],kZ[ZL[0X00001]]);end;end;else if not(VL<55)then if VL==56 then do if ZL[0X1]~=0xf8 then for Ks=ZL[0X7],ZL[6]do kZ[Ks]=nil;end;else KZ=KZ-1;(K1)[KZ]={[4]=0X35,[0X6]=(ZL[6]-0XdF),[0X00007]=(ZL[0x07]-223)};end;end;else do(kZ)[ZL[0X7]]={};end;end;else if not(not(kZ[ZL[6]]<=kZ[ZL[1]]))then else KZ=ZL[0X7];end;end;end;end;end;end;else if VL>=0X18 then if VL<0X000024 then if not(VL<0x1e)then if not(VL<0X21)then if VL>=0X000022 then if VL==35 then local Lm=(ZL[0X7]);local Xm=U(function(...)H();for is,Xs,ds,cs,As,ns,us,zs,bs,fs in...do H(true,{is,Xs,ds,cs,As,ns,us,zs,bs,fs});end;end);(Xm)(kZ[Lm],kZ[Lm+0X1],kZ[Lm+2]);pZ=Lm;(kZ)[Lm]=Xm;do KZ=ZL[0X6];end;else local n5=kZ[ZL[6]];local x5=ZL[7];kZ[x5+1]=n5;(kZ)[x5]=n5[ZL[5]];end;else sZ[ZL[0x006]]=kZ[ZL[0X7]];end;else if not(VL<31)then if VL~=0X000020 then if not(kZ[ZL[6]]<kZ[ZL[1]])then else KZ=ZL[0X7];end;else kZ[ZL[7]][kZ[ZL[6]]]=kZ[ZL[0x00001]];end;else if not(not kZ[ZL[7]])then else KZ=ZL[6];end;end;end;else if not(VL>=0X1b)then if not(VL<25)then do if VL~=0X1a then kZ[ZL[0X07]]=kZ[ZL[6]]+kZ[ZL[0X0001]];else do pZ=ZL[7];end;(kZ)[pZ]=kZ[pZ]();end;end;else local mL=S1[ZL[6]];do(mL[0X0001])[mL[0X00002]]=kZ[ZL[7]];end;end;else if VL<28 then(kZ)[ZL[7]]=kZ[ZL[6]]~=kZ[ZL[0X1]];else if VL==0x00001D then do kZ[ZL[0X7]]=kZ[ZL[0x6]]%kZ[ZL[0x0001]];end;else local ei=(ZL[7]);local ui=kZ[ei];local oi=(ZL[1]-1)*50;do for HO=1,pZ-ei do(ui)[oi+HO]=kZ[ei+HO];end;end;end;end;end;end;else if not(VL>=42)then do if not(VL<39)then if VL>=0x00028 then if VL==41 then kZ[ZL[7]]=ZL[2];else(kZ[ZL[7]])[kZ[ZL[0X006]]]=ZL[0X05];end;else local EP=ZL[7];local cP,AP=kZ[EP]();if not(cP)then else KZ=ZL[6];kZ[EP+0x3]=AP;end;end;else do if VL<37 then if kZ[ZL[0X6]]==ZL[0x0005]then else do KZ=ZL[0X7];end;end;else do if VL~=0X26 then(kZ)[ZL[7]]=fG[ZL[6]];else if ZL[1]==0x24 then do KZ=KZ-0X0001;end;K1[KZ]={[0X4]=85,[7]=(ZL[0X7]-0X0039),[0X0006]=(ZL[6]-0x39)};else repeat local Zr,Ir=Y1,kZ;if not(#Zr>0)then else local OU={};do for zK,hK in y,Zr do for GD,QD in y,hK do do if QD[1]==Ir and QD[0X00002]>=0X00 then local Od=QD[2];do if not OU[Od]then do(OU)[Od]={Ir[Od]};end;end;end;(QD)[0x1]=OU[Od];QD[2]=0X1;end;end;end;end;end;end;until true;local Bx=ZL[0X7];return false,Bx,Bx+ZL[6]-2;end;end;end;end;end;end;end;else if VL<45 then do if not(VL<0x2b)then if VL==0X002C then if not(kZ[ZL[0X6]]<=ZL[5])then KZ=ZL[7];end;else local Ve,ye=ZL[0X7],ZL[0x6];do pZ=Ve+ye-0X1;end;repeat local l2,V2=Y1,(kZ);if#l2>0 then local nK={};do for ro,Lo in y,l2 do for DI,lI in y,Lo do if lI[0X1]==V2 and lI[2]>=0 then local yY=lI[2];if not nK[yY]then(nK)[yY]={V2[yY]};end;lI[0X1]=nK[yY];lI[2]=1;end;end;end;end;end;until true;return true,Ve,ye;end;else do kZ[ZL[0X07]]=kZ[ZL[6]]<=kZ[ZL[1]];end;end;end;else do if VL<0x002E then local UH=(ZL[0x7]);local bH,jH=kZ[UH]();if not(bH)then else for vw=0X1,ZL[1]do do(kZ)[UH+vw]=jH[vw];end;end;do KZ=ZL[6];end;end;else if VL==0X2f then do kZ[ZL[7]]=kZ[ZL[6]]<kZ[ZL[1]];end;else do kZ[ZL[0X7]][ZL[0X2]]=ZL[5];end;end;end;end;end;end;end;elseif not(VL<12)then if not(VL>=0X0012)then if not(VL<15)then do if VL<16 then do fG[ZL[6]]=kZ[ZL[0X07]];end;else if VL~=17 then local FJ=(ZL[0X7]);do kZ[FJ]=kZ[FJ](kZ[FJ+1],kZ[FJ+0X0002]);end;do pZ=FJ;end;else local F5=(ZL[0x7]);pZ=F5+ZL[6]-0X001;do kZ[F5]=kZ[F5](Y(kZ,F5+1,pZ));end;pZ=F5;end;end;end;else if VL<13 then do kZ[ZL[0x7]]=ZL[0x0002];end;else if VL~=14 then local QM=(ZL[0x00007]);kZ[QM](kZ[QM+1],kZ[QM+2]);pZ=QM-0X01;else local Ks,Ts=ZL[7],ZL[0X06];do if Ts==0X0 then else pZ=Ks+Ts-1;end;end;local Rs,Gs,Ys=ZL[0X0001],nil,(nil);if Ts==0X00001 then Gs,Ys=aG(kZ[Ks]());else do Gs,Ys=aG(kZ[Ks](Y(kZ,Ks+0X1,pZ)));end;end;if Rs==0X1 then pZ=Ks-0X1;else do if Rs==0X0000 then Gs=Gs+Ks-1;pZ=Gs;else Gs=Ks+Rs-0X002;pZ=Gs+1;end;end;local br=(0x000);for uI=Ks,Gs do br=br+1;kZ[uI]=Ys[br];end;end;end;end;end;else if VL>=0X000015 then do if VL>=0X000016 then if VL~=0X17 then local bp=ZL[0X7];local up=U(function(...)(H)();for j1 in...do H(true,j1);end;end);up(kZ[bp],kZ[bp+1],kZ[bp+0x2]);do pZ=bp;end;kZ[bp]=up;KZ=ZL[0X6];else kZ[ZL[7]]=B(kZ[ZL[0X6]],kZ[ZL[0X01]]);end;else kZ[ZL[0X7]]=N(kZ[ZL[0X6]],kZ[ZL[1]]);end;end;else if not(VL<19)then if VL==20 then kZ[ZL[7]]={Y({},0x00001,ZL[6])};else local Qu=ZL[0X007];local Ou=(kZ[Qu]);local Gu=((ZL[0X00001]-1)*50);for q8=1,ZL[0X0006]do Ou[Gu+q8]=kZ[Qu+q8];end;end;else kZ[ZL[0X00007]]=true;end;end;end;else if VL>=0X6 then if VL<0X9 then if not(VL>=0X7)then local Oi=S1[ZL[0X6]];kZ[ZL[7]]=Oi[1][Oi[2]];else if VL~=8 then local MU=ZL[6];do kZ[ZL[7]]=kZ[MU]..kZ[MU+0X1];end;else local pt=ZL[7];local yt,lt=kZ[pt]();do if yt then(kZ)[pt+1]=lt;KZ=ZL[6];end;end;end;end;else if not(VL>=10)then local is=(ZL[0x0007]);pZ=is+ZL[6]-1;kZ[is](Y(kZ,is+1,pZ));pZ=is-1;else do if VL==11 then do if kZ[ZL[6]]<=kZ[ZL[1]]then do KZ=ZL[7];end;end;end;else do kZ[ZL[0X007]]=kZ[ZL[6]]*kZ[ZL[0X1]];end;end;end;end;end;else if not(VL>=0X3)then if VL<1 then if not(kZ[ZL[6]]<kZ[ZL[1]])then KZ=ZL[0X007];end;else if VL==0x002 then local FZ=ZL[0X00006];local GZ=kZ[FZ];for uu=FZ+1,ZL[0x1]do do GZ=GZ..kZ[uu];end;end;kZ[ZL[0X07]]=GZ;else if kZ[ZL[0X7]]then KZ=ZL[6];end;end;end;else do if not(VL<4)then if VL==0x5 then kZ[ZL[0X7]]=s(kZ[ZL[0X6]],kZ[ZL[1]]);else if kZ[ZL[6]]~=kZ[ZL[0X1]]then else KZ=ZL[0X7];end;end;else do(kZ)[ZL[0X007]]=L(kZ[ZL[6]]);end;end;end;end;end;end;end;until false;end);if not(yZ)then do if u(rZ)~="string"then t(rZ,0X00000);else do if not(v(rZ,"\097t\116\101m\112\116\032\116o \121\105e\108d acr\111s\115 \109\101\116a\109etho\100/\067\037\045\099a\108l\032b\111unda\114y"))then else return coroutine.yield();end;end;do if not(v(rZ,"^.-:%d+: "))then t(rZ,0);else(t)("Lur\097ph\032\083\099r\105p\116:"..(U1[KZ-0X1]or'\040\105\110\116\101r\110\097l)').."\058 "..f(rZ),0);end;end;end;end;else if rZ then if QZ==1 then do return kZ[nZ]();end;else return kZ[nZ](Y(kZ,nZ+1,pZ));end;else if nZ then return Y(kZ,nZ,QZ);end;end;end;end;end;if J then J(I1,t1);end;return I1;end;local function lG()local ik,Jk,sk,hk,nk,jk,gk=0x1,nil,nil,nil,nil,nil,nil;while ik<7 do if ik<=2 then if not(ik<=0)then if ik==1 then do ik=0X6;end;else nk={};ik=5;end;else do sk={};end;ik=0X4;end;else if ik<=4 then if ik==0X3 then gk=0X1;ik=7;else hk={nil,nil,nil,{},nil,TG,{},nil,{}};do ik=2;end;end;else if ik~=0X0005 then Jk={};ik=0;else do jk=M()-42118;end;do ik=0X3;end;end;end;end;end;ik=0X4;local qk,Bk=nil,nil;do while-0X0744C5Cbe do if ik<=0x2 then if ik<=0 then for ED=0x0001,c()do(nk)[ED]={h(),c()};end;break;else do if ik~=0X1 then(hk)[0x8]=nk;do ik=0X0;end;else hk[3]=c();ik=5;end;end;end;elseif ik<=4 then if ik~=0x3 then do qk=h();end;ik=3;else Bk=h()~=0X0;do ik=0X6;end;end;else do if ik~=0X005 then for Ks=qG,jk do local Ms,Gs=nil,nil;do for Fn=0X0,0x1 do do if Fn~=0X0 then Gs=nil;else Ms=h();end;end;end;end;local Fs=(0X000);while Fs~=2 do do if Fs~=0X00000 then if Ms==0X2F then Gs=O();elseif Ms==164 then Gs=O()+M();elseif Ms==26 then Gs=O()+M();elseif Ms==200 then Gs=false;elseif Ms==235 then Gs=o();elseif Ms==62 then Gs=l(iG(qk),h());elseif Ms==0x3A then do Gs=l(iG(qk),3);end;elseif Ms==149 then Gs=O();elseif Ms==no then Gs=o();elseif Ms==Vo then Gs=O();elseif Ms==201 then Gs=O();elseif Ms~=0xcd then else do Gs=Io;end;end;Fs=2;else do(Jk)[Ks-1]=gk;end;Fs=0X1;end;end;end;local ns=({Gs,{}});do Fs=0x1;end;repeat do if Fs<=0x0 then gk=gk+1;do Fs=0X00002;end;else do if Fs==1 then sk[gk]=ns;Fs=0;else if not(Bk)then else FG[uG]=ns;uG=uG+1;end;Fs=0x03;end;end;end;end;until Fs>2;end;ik=0x0001;else hk[11]=M();ik=0X2;end;end;end;end;end;local Lk=nil;do for fw=0,0x2 do if fw<=0x00000 then Lk=h();else if fw==0X1 then(hk)[6]=Q(Lk,1,0X1)~=0;else hk[0X1]=Q(Lk,0x2,0X00001)~=0;end;end;end;end;ik=0x4;local Wk,fk=nil,(nil);repeat do if ik<=0X01 then do if ik==0 then do for lj=0X1,Wk do local Bj,kj,Yj,Ej=0,nil,nil,(nil);while Bj~=0X00003 do if Bj<=0x0 then do kj=M();end;Bj=2;elseif Bj~=0X00001 then do Yj=M();end;Bj=0x00001;else Ej=M();Bj=3;end;end;for a0=kj,Yj do(hk[QG])[a0]=Ej;end;end;end;ik=2;else fk=M()-53400;ik=5;end;end;else if ik<=2 then hk[5]=c();ik=1;else if ik==3 then Wk=M();ik=0;else(hk)[0X0B]=h();ik=3;end;end;end;end;until ik>=0X005;local vk=(hk[0X7]);for rv=0,fk-1 do vk[rv]=lG();end;do hk[10]=h();end;local bk=hk[4];ik=2;local Ck=nil;do while true do if ik<=0 then for GA=0X001,Ck do bk[GA]={[7]=T(),[4]=c(),[0X3]=h(),[0X00001]=T(),[0X6]=T(),[2]=h(),[0X5]=h()};end;ik=1;else if ik==1 then for C1=qG,Ck do local Z1=hk[4][C1];for Fs,ds in io(z)do local ls,Us=nil,nil;do for dt=0,2 do if not(dt<=0)then do if dt~=1 then if Us==10 then local dx,hx,Mx=Jk[Z1[ds]],0,(nil);repeat if hx==0x0 then do Mx=sk[dx];end;do hx=1;end;else if not(Mx)then else(Z1)[ls]=Mx[1];local us,is=0x0,(nil);while us<=0X01 do if us==0 then is=Mx[2];do us=1;end;else do(is)[#is+0X001]={Z1,ls};end;us=0X2;end;end;end;hx=2;end;until hx>=2;else if Us==0X01 then do(Z1)[ds]=C1+Z1[ds]+1;end;end;end;else do Us=Z1[ls];end;end;end;else ls=G[ds];end;end;end;end;end;break;else Ck=M()-0X54D4;do ik=0x0;end;end;end;end;end;for sR=0x0000,0X1 do if sR==0X000 then(hk)[0X2]=c();else return hk;end;end;end;local eG=(nil);do for F_=0,1 do if F_~=0 then fG[1]=FG;else eG=lG();end;end;end;FG=TG;return tG(eG,P,nil)(...);end)(4,coroutine.wrap,type,16,string,0,ipairs,pcall,135,0X0000a,2,string.byte,tostring,_ENV,unpack,11,9,"\035",nil,string.match,string.sub,81,2047,select,7,12,table.unpack,"\098and",table.insert,8,0X001,0Xe,coroutine.yield,0Xd,'b\110\111\116',0X6,5,setfenv,true,2147483648,rawset,tonumber,getfenv,65536,"\114s\104i\102\116",{15455,3832462269,2998555335,0X083FAfa2E,559757535,4199471096,1818934944,3816267348,0X3DD9Fe2C},...);
