-- This file was generated using Luraph Obfuscator v13.5.6

return(function(UF,NF,lF,qF,CF,nF,OF,wF,tF,oF,YF,gF,vF,MF,HF,aF,SF,iF,FF,sF,cF,mF,yF,fF,jF,IF,GF,TF,dF,DF,QF,JF,PF,pF,RF,zF,e,...)local k,u=iF,pcall;local i,h=nil,(nil);local z=(2147483648);for LF=0,1 do if LF~=0 then h=nF;else i=string.rep;end;end;local BF,A,W,j,o,V=3,nil,nil,nil,nil,(nil);while BF<0x5 do if not(BF<=1)then if BF<=2 then o=QF;BF=0X0;else if BF==0x003 then A=oF.sub;do BF=4;end;else do W=aF;end;do BF=1;end;end;end;else do if BF~=0 then j={[0]={[0]=0,0x01,2,0X3,0X004,0X5,6,0X0007,8,9,0x00A,0XB,0X0000c,0X0D,0XE,0X0f},{[0X00000]=1,0,3,0X02,5,0X4,0X7,6,9,8,11,10,13,tF,qF,0XE},{[0x00]=0X2,3,0,0X1,0x00006,7,0X4,0X0005,HF,0XB,8,0X00009,0xE,qF,tF,0X00d},{[0]=0x03,JF,PF,0x0,0X7,6,5,4,0X0B,10,0X0009,0x00008,qF,UF,13,0x0000C},{[0]=0X004,5,6,7,0,0X00001,0X00002,0X3,12,13,0X0000e,0X00F,0X8,9,0XA,11},{[0X000]=0X005,mF,7,6,PF,0X0,3,JF,0Xd,12,15,0X0000e,0x0009,gF,11,0xA},{[0x000]=0X6,0X7,4,0X5,0X00002,3,0,1,14,qF,12,13,HF,11,gF,9},{[0X00000]=7,6,0X5,4,3,2,PF,0X0,0X0000f,14,0XD,12,11,0xA,0X9,8},{[0X0]=8,0X9,0Xa,0x0B,12,0Xd,14,15,0,1,2,3,4,5,6,7},{[sF]=9,8,11,0X0A,0xD,0Xc,0XF,0X000e,PF,sF,pF,2,DF,0X4,0X007,0X6},{[0X0]=HF,0Xb,8,9,0xE,0xF,12,0XD,2,3,0,1,0X6,0X7,4,5},{[0X0]=11,10,0X9,0X0008,0XF,14,13,12,3,2,PF,0X000,7,0X0006,5,mF},{[0x0]=12,13,14,15,8,0X9,0Xa,0X000B,mF,5,6,TF,0,PF,2,0X3},{[0]=0X00d,12,0x0f,UF,9,8,11,10,5,4,7,0X6,0X1,0X0,0X00003,0x02},{[sF]=14,15,0X0000c,0XD,10,0XB,8,9,0X6,TF,0X4,5,0X0002,pF,0X0,0X1},{[0]=0XF,14,13,12,YF,10,0x009,0x00008,0X7,0x6,5,4,3,0x002,PF,0}};BF=2;else V={0X5,0X0004,0x0002};BF=0X005;end;end;end;end;local q,J,T=zF,rawset,0X00001;local E=nil;local H,P,m=rawget,next,(wF.yield);local t=(NF.insert);for vS=0x00,1 do if vS~=0X0 then else do E=dF;end;end;end;local p=yF;local Z,g=error,OF or NF.unpack;BF=0x2;local I,D,Y,r,Q,ZF,N,a=nil,nil,nil,nil,nil,nil,nil,nil;repeat if not(BF<=0X004)then do if not(BF<=6)then do if BF<=7 then BF=5;else if BF==0X00008 then D=(p and p()or _ENV);BF=7;else r=string.byte;BF=0X4;end;end;end;else if BF==5 thenelse do a=MF;end;do BF=10;end;end;end;end;else if BF<=0X1 then if BF~=0 then N=function()local l2,U2=0X2,nil;do while'\0749\047\067\063f'do if l2<=0 then do T=T+0x1;end;l2=1;else if l2==1 then do return U2;end;else do U2=r(Y,T,T);end;l2=0X000;end;end;end;end;end;do BF=0X6;end;else Y=o(A(Y,5),"..",function(l5)if r(l5,2)==72 then local xh=(0);do while 0.7671252486423662 do if xh~=0 then return fF;else do Q=E(A(l5,1,1));end;do xh=0X00001;end;end;end;end;else local YU=(W(E(l5,16)));if not(Q)then return YU;else local Im=(i(YU,Q));Q=IF;do return Im;end;end;end;end);do BF=0X0003;end;end;else do if not(BF<=0X02)then if BF==3 then ZF={};BF=1;else BF=0;end;else do I={[0]=0X1};end;BF=0X08;end;end;end;end;until BF>=10;local F=(bit or CF);BF=0X1;local d,O=nil,nil;while BF<0X00002 do if BF~=0X0 then d=4294967296;BF=0;else O=0x2^52;BF=0X2;end;end;BF=0;local w,f=nil,nil;repeat do if BF~=0X0 then f=z-0X1;do break;end;else w=function()local sk,Kk,Uk,Jk=nil,nil,nil,nil;local ak=(0X0000);while'H\043\114t\120\099\109\090'do if ak<=0X00 then do sk,Kk,Uk,Jk=r(Y,T,T+0x3);end;ak=1;else do if ak==0X1 then do T=T+mF;end;ak=0X2;else return Jk*16777216+Uk*65536+Kk*0X100+sk;end;end;end;end;end;BF=0x00001;end;end;until(false);local y=(d-0x001);do BF=0X00003;end;local M,C,v=nil,nil,(nil);do repeat if BF<=1 then if BF~=0X0 then v=function()local jm,Lm,Jm,Cm,Dm,am,Wm=4,nil,nil,nil,nil,nil,nil;while jm<0X00007 do if jm<=2 then if jm<=0X0 then Jm=w();jm=0X3;else if jm~=0X01 then do Wm=M(Jm,0,0x000014)*d+Lm;end;jm=7;else if not(Lm==0x0 and Jm==0X0000)then else return 0X00000;end;jm=0x6;end;end;else do if not(jm<=0X4)then if jm~=5 then Dm=(-1)^M(Jm,0x01f,0x1);jm=0X00005;else do am=M(Jm,0x14,11);end;jm=2;end;else if jm==0X003 then do Cm=1;end;do jm=1;end;else do Lm=w();end;jm=0X00;end;end;end;end;end;if am==0 then do if Wm~=0X0000 then do am=1;end;do Cm=0x0;end;else do return Dm*0;end;end;end;elseif am==2047 then do if Wm==0 then do return Dm*(0/0);end;else return Dm*(0X1/0);end;end;end;return Dm*(0X02^(am-0X3Ff))*(Wm/O+Cm);end;BF=0X4;else M=function(CK,AK,PK)local jK=((CK/I[AK])%I[PK]);jK=jK-jK%0X1;return jK;end;BF=2;end;else if BF~=2 then do local yY=(1);local lY=(nil);while yY<2 do if yY~=0 then lY=2;yY=0;else do for Mm=0x00001,0X1f do do for Bj=0x000,0x01 do if Bj~=0X00 then do lY=lY*0X2;end;else(I)[Mm]=lY;end;end;end;end;end;yY=2;end;end;end;BF=0;else C=function()local NP,aP=w(),w();if not(aP>=z)then else aP=aP-d;end;return aP*d+NP;end;do BF=1;end;end;end;until BF>=4;end;local S,U=F and F[vF]or function(bw,Ew)local sw,dw,fw=0,nil,(nil);repeat if sw<=1 then if sw~=0x0 then do while bw>0 and Ew>0X0 do local sP,oP=nil,nil;local eP=(0x4);do while eP<=0X5 do if not(eP<=2)then do if not(eP<=3)then if eP~=0X00004 then bw=(bw-sP)/16;eP=0X0;else sP=bw%0X10;do eP=0X00003;end;end;else do oP=Ew%16;end;do eP=0X001;end;end;end;else if not(eP<=0)then do if eP==0X1 then do fw=fw+j[sP][oP]*dw;end;eP=0X5;else do dw=dw*16;end;do eP=0X6;end;end;end;else Ew=(Ew-oP)/0X0010;eP=2;end;end;end;end;end;end;sw=0X5;else bw=bw%d;sw=2;end;elseif sw<=0X2 then Ew=Ew%d;sw=0X003;else if sw==0x3 then dw=0X1;sw=0X00004;else do fw=0;end;sw=1;end;end;until sw>=0x5;do return fw+bw*dw+Ew*dw;end;end,(coroutine.wrap);local x=(type);local l=(F and F[jF]or function(IA,BA)do for Dt=0,0X001 do do if Dt~=0X000 then BA=BA%d;else IA=IA%d;end;end;end;end;return((IA+BA)-S(IA,BA))/0X02;end);local c=F and F[FF]or function(ai,Pi)ai=ai%d;Pi=Pi%d;do return y-l(y-ai,y-Pi);end;end;local G=F and F[SF]or function(KL)return y-(KL%d);end;do BF=2;end;local R,B=nil,nil;do repeat do if BF<=0 then R=R or function(zp,lp)local np=(0x0002);repeat if np<=0 then return(zp*I[lp])%d;else if np~=0X1 then do if lp>=0X00020 then return 0X0;end;end;np=0X1;else if not(lp<sF)then else return B(zp,-lp);end;np=0;end;end;until false;end;BF=3;else do if BF~=1 then R=F and F.lshift;BF=0X1;else do B=F and F[lF];end;BF=0;end;end;end;end;until BF>=0X3;end;local s=(setfenv);BF=3;local L,X,b=nil,nil,(nil);while BF~=0X4 do if not(BF<=0X1)then do if BF==2 then L={[0X5]=0X006,[9]=0X09,[0]=8,[0x000]=8,[6]=0X8,[0X3]=2,[9]=1,[0X006]=mF,[0x4]=0X00001,[0X2]=7};BF=0X1;else B=B or function(g7,b7)local d7,O7=3,nil;while(true)do do if d7<=1 then if d7~=0 then O7=(g7%d/I[b7]);do d7=0X2;end;else if b7<0X00000 then return R(g7,-b7);end;do d7=0X1;end;end;else if d7~=0X02 then do if not(b7>=cF)then else do return 0X0;end;end;end;d7=0;else do return O7-O7%1;end;end;end;end;end;end;BF=0X2;end;end;else if BF~=0 then X=function()local ZN,oN=0,(0x0000);while true do local nM=(r(Y,T,T));T=T+1;oN=c(oN,R(l(nM,0X07F),ZN));do if l(nM,128)~=0x0 then else return oN;end;end;ZN=ZN+0X7;end;end;BF=0X0;else b=function()local mG=X();if not(mG>f)then else return mG-d;end;return mG;end;BF=4;end;end;end;local K=assert;local eF=(N());local KF=N();local kF,uF,hF=nil,nil,(nil);do for Eb=0,0x2 do if not(Eb<=0)then if Eb==0X1 then do uF=function(...)return k("#",...),{...};end;end;else hF=0x0001;end;else kF=function(ua)local pa,oa,na,Ka,Aa,da=6,nil,nil,nil,nil,(nil);repeat if not(pa<=0X3)then do if not(pa<=0X5)then if pa==0X0006 then oa={r(Y,T,T+3)};pa=0X5;else KF=(173*KF+ua)%0X0000100;pa=2;end;else if pa==0X04 then return da*0x00001000000+Aa*0x0010000+Ka*0X0100+na;else do na=S(oa[1],KF);end;pa=1;end;end;end;else do if not(pa<=1)then if pa==2 then T=T+0X4;pa=0X4;else da=S(oa[mF],KF);pa=0X7;end;elseif pa==0X00000 then Aa=S(oa[3],KF);pa=0X3;else Ka=S(oa[2],KF);pa=0X00;end;end;end;until false;end;end;end;end;local EF,xF,AF,rF,WF=nil,nil,nil,nil,(nil);for CM=0X0,5 do do if not(CM<=2)then if not(CM<=3)then do if CM==4 then function rF()local DP=(3);local XF,bF,VF,eP=nil,nil,nil,(nil);while DP~=0X5 do if not(DP<=1)then if DP<=0X2 then XF={};DP=0X0;else if DP==0X3 then DP=2;else VF=PF;DP=1;end;end;else do if DP==0x0 then bF={IF,IF,IF,IF,nil,nil,{},{},{}};DP=4;else eP=w()-0x9b06;DP=0X0005;end;end;end;end;local LF={};DP=4;local AP,qP,WP,vP,jP,SP=nil,nil,nil,nil,nil,nil;while DP~=0X0013 do if not(DP<=0X008)then if not(DP<=0xD)then if DP<=15 then do if DP==0X00e then bF[1]=M(vP,0X1,0X01)~=0;DP=2;else(bF)[0X00f]=N();do DP=0X0005;end;end;end;else if not(DP<=16)then do if DP==0X011 then do bF[14]=N();end;do DP=0x3;end;else do bF[0Xa]=N();end;DP=0x6;end;end;else(bF)[0Xe]=w();DP=18;end;end;else if not(DP<=0x000A)then if not(DP<=11)then if DP~=12 then SP=w()-0x2c17;do DP=19;end;else do bF[0X00004]=X();end;DP=15;end;else qP=N()~=0;DP=8;end;else if DP==0X9 then for KK=0X1,X()do WP[KK]={N(),X()};end;DP=0X000;else for HQ=0x1,eP do local JQ,jQ,yQ,eQ=0X6,nil,nil,(nil);while(true)do do if not(JQ<=0x02)then if not(JQ<=0X4)then do if JQ~=0X5 then do jQ=N();end;JQ=1;else do eQ={yQ,{}};end;do JQ=0x00004;end;end;end;else do if JQ~=0X3 then(LF)[VF]=eQ;JQ=0X3;else do VF=VF+1;end;break;end;end;end;else if JQ<=0X000 then if jQ==0X0000c3 then yQ=A(EF(AP),w());elseif jQ==0x00009D then do yQ=true;end;elseif jQ==88 then yQ=false;elseif jQ==0xD7 then yQ=v();elseif jQ==68 then yQ=A(EF(AP),v()+w());elseif jQ==74 then do yQ=A(EF(AP),5);end;elseif jQ==GF then yQ=C();elseif jQ==111 then do yQ=A(EF(AP),N());end;elseif jQ==185 then yQ=A(EF(AP),w());elseif jQ==RF then yQ=w();end;JQ=5;else do if JQ~=0X001 then XF[HQ-0X1]=VF;do JQ=0X0;end;else yQ=IF;do JQ=2;end;end;end;end;end;end;end;if qP then do for cx=0X000,1 do if cx~=0 then hF=hF+1;else xF[hF]=eQ;end;end;end;end;end;DP=0X00C;end;end;end;else if DP<=0x3 then do if not(DP<=1)then if DP==0X002 then bF[3]=M(vP,0X0002,0X001)~=sF;DP=0X010;else(bF)[DF]=X();DP=0XD;end;else do if DP==0 then do jP=w();end;do DP=7;end;else do bF[0X2]=WP;end;DP=0X9;end;end;end;end;else do if not(DP<=5)then if DP<=6 then do(bF)[qF]=w();end;DP=1;else do if DP==0X7 then for Ty=0X0001,jP do local Fy=2;local cy,ry,Cy=nil,nil,(nil);repeat if not(Fy<=0x00001)then if Fy==0X2 then cy=w();Fy=0x0003;else ry=w();Fy=0X0;end;else do if Fy~=0X0 then do for zi=cy,ry do(bF[0X8])[zi]=Cy;end;end;do Fy=0x0004;end;else Cy=w();Fy=1;end;end;end;until Fy>=0X4;end;DP=0X11;else do WP={};end;DP=10;end;end;end;else if DP==4 then AP=N();DP=0xB;else vP=N();DP=0Xe;end;end;end;end;end;end;local IP=bF[9];DP=0X0001;local KP=nil;while DP<=0X2 do do if DP<=0 then do KP=w()-0X626B;end;DP=3;else do if DP==0X1 then do for ov=0X0000,SP-0X1 do IP[ov]=rF();end;end;DP=0X2;else(bF)[0X06]=X();DP=0;end;end;end;end;end;local CP=bF[0X0007];for L4=0X0,3 do if L4<=1 then if L4==0X00000 then for yW=0x0001,KP do(CP)[yW]={[3]=X(),[0x0002]=b(),[0X7]=N(),[1]=N(),[6]=N(),[0X0004]=b(),[0X5]=b()};end;else for r9=1,KP do local X9=(nil);for Xe=0,0X1 do do if Xe==0X0 then do X9=bF[0X0007][r9];end;else do for ti,Xi in ipairs(V)do local ni=0X000;local Yi,Qi=nil,(nil);while ni<=2 do if not(ni<=0X0)then if ni==1 then if Qi==0X0000 then local jx=1;local yx,Ex=nil,(nil);do while(true)do if not(jx<=0)then if jx==0X0001 then yx=XF[X9[Xi]];jx=0x0;else do if Ex then local qB=(nil);do for eA=0,0X2 do if eA<=0X0 then(X9)[Yi]=Ex[1];else if eA==1 then qB=Ex[0X002];else(qB)[#qB+0X1]={X9,Yi};end;end;end;end;end;end;break;end;else Ex=LF[yx];jx=2;end;end;end;elseif Qi==qF then(X9)[Xi]=r9+X9[Xi]+0X1;end;ni=3;else Qi=X9[Yi];ni=0X01;end;else Yi=L[Xi];ni=0X2;end;end;end;end;end;end;end;end;end;else if L4~=0X2 then do return bF;end;else do bF[0X000A]=w();end;end;end;end;end;else do WF=rF();end;end;end;else function AF(TV,YV,cV)local xV,EV,ZV=cV[0X00005],cV[0X8],(cV[1]);local kV=cV[3];local PV,vV,JV=cV[0X0007],cV[9],cV[0X06];local pV=q({},{__mode="v"});local MV=(nil);local fV=(cV[0X00004]);MV=function(...)local Se=(0X001);local ge={};local qe=((p and p()or _ENV));local Re=({[1]=cV,[0X2]=ge});local Xe,de=uF(...);local te=(0);Xe=Xe-1;for Hm=0x0,Xe do do if not(JV>Hm)then break;else ge[Hm]=de[Hm+1];end;end;end;local Ne=((qe==D and YV or qe));if not ZV then do de=nil;end;elseif kV then(ge)[JV]={n=Xe>=JV and Xe-JV+0X1 or 0X0,g(de,JV+1,Xe+0X1)};end;if Ne~=qe then if not(s)then do _ENV=Ne;end;else(s)(MV,Ne);end;end;local Ze,me,be,fe=u(function()do while true do local iX=PV[Se];local GX=iX[0x3];Se=Se+1;if not(GX<47)then do if not(GX>=0X000047)then if GX>=0X3B then if GX<65 then if not(GX<0X3E)then if GX>=0x3F then if GX~=64 then do ge[iX[2]]=ge[iX[5]]%iX[0x1];end;else do ge[iX[0X0002]]=B(ge[iX[5]],ge[iX[0X4]]);end;end;else(ge)[iX[0X0002]]=ge[iX[5]]~=ge[iX[4]];end;else if not(GX<0X003c)then if GX==61 then ge[iX[2]][ge[iX[5]]]=ge[iX[4]];else te=iX[2];ge[te]=ge[te]();end;else do if not(not(ge[iX[0x5]]<=ge[iX[0X0004]]))then else Se=iX[2];end;end;end;end;else if GX<68 then if not(GX<0X42)then do if GX==0X43 then local Lm=iX[0X2];ge[Lm](ge[Lm+1],ge[Lm+2]);te=Lm-1;else if iX[0X04]==0X44 then Se=Se-1;(PV)[Se]={[0X003]=1,[2]=(iX[2]-198),[0X00005]=(iX[5]-198)};else ge[iX[2]]=de[JV+0x00001];end;end;end;else local vD=iX[0x2];local LD=U(function(...)m();for tT,RT in...do m(true,tT,RT);end;end);LD(ge[vD],ge[vD+1],ge[vD+2]);do te=vD;end;ge[vD]=LD;Se=iX[0x00005];end;else if GX>=69 then do if GX==0X46 then local wd=iX[0X2];local id,nd=iX[5],iX[4];do if id==0 then else do te=wd+id-1;end;end;end;local yd,Ld=nil,(nil);if id~=1 then yd,Ld=uF(ge[wd](g(ge,wd+0X1,te)));else yd,Ld=uF(ge[wd]());end;if nd~=1 then if nd==0 then yd=yd+wd-0X001;do te=yd;end;else yd=wd+nd-0x2;te=yd+0X00001;end;local ew=(0);for nY=wd,yd do ew=ew+1;(ge)[nY]=Ld[ew];end;else te=wd-1;end;else if ge[iX[0X05]]==ge[iX[4]]then else Se=iX[0x2];end;end;end;else if ge[iX[0X5]]~=ge[iX[4]]then else Se=iX[0X2];end;end;end;end;else do if GX<0X35 then if GX>=50 then if GX>=0X33 then do if GX==0X34 then local O0=TV[iX[5]];O0[1][O0[2]]=ge[iX[2]];else repeat local W1,O1,Z1=pV,ge,(iX[2]);if#W1>0 then local aa={};for aG,fG in P,W1 do for ER,pR in P,fG do if not(pR[1]==O1 and pR[2]>=Z1)then else local O2=(pR[0X2]);do if not(not aa[O2])then else aa[O2]={O1[O2]};end;end;pR[1]=aa[O2];do pR[0X2]=0X1;end;end;end;end;end;until true;end;end;else local e3=iX[2];local X3=(ge[e3]);local d3,c3=ge[e3+0X0001],(ge[e3+2]);(ge)[e3]=U(function()do for zB=X3,d3,c3 do(m)(true,zB);end;end;end);do Se=iX[0x00005];end;end;else do if GX>=0X000030 then if GX~=49 then local Si=(iX[2]);local Hi=(U(function(...)(m)();for uv,hv,Xv,xv,Dv,cv,gv,iv,dv,yv in...do(m)(true,{uv,hv,Xv,xv,Dv,cv,gv,iv,dv,yv});end;end));Hi(ge[Si],ge[Si+0X1],ge[Si+2]);do te=Si;end;do ge[Si]=Hi;end;Se=iX[5];else ge[iX[0X002]][iX[0X6]]=iX[1];end;else(ge)[iX[0X2]]=l(ge[iX[0X5]],ge[iX[0X00004]]);end;end;end;else if GX>=0x38 then if GX<0X000039 then if ge[iX[5]]~=iX[1]then else Se=iX[0X2];end;else if GX~=58 then local XP=(iX[0X02]);local eP,ZP=ge[XP],(iX[0x4]-1)*50;for X4=1,te-XP do(eP)[ZP+X4]=ge[XP+X4];end;else if ge[iX[5]]<ge[iX[0X4]]then Se=iX[2];end;end;end;else do if not(GX<54)then do if GX~=0X37 then do(ge)[iX[0x2]]=ge[iX[5]]+ge[iX[4]];end;else(ge)[iX[2]]=iX[6];end;end;else local Ev=iX[0x2];do te=Ev+iX[5]-1;end;ge[Ev](g(ge,Ev+1,te));te=Ev-1;end;end;end;end;end;end;else if GX>=83 then if not(GX>=0x59)then if not(GX>=0X56)then if GX>=0X054 then if GX==85 then ge[iX[0X2]]=Re[iX[0X5]];else local cI,nI=vV[iX[0X005]],(nil);local yI=(cI[0X02]);local DI=#yI;if not(DI>0X0)then else do nI={};end;for KZ=1,DI do local yZ=(yI[KZ]);do if yZ[0X0001]~=0 then do nI[KZ-1]=TV[yZ[0X0002]];end;else nI[KZ-1]={ge,yZ[2]};end;end;end;t(pV,nI);end;do ge[iX[0X2]]=AF(nI,Ne,cI);end;end;else if not(ge[iX[5]]<ge[iX[4]])then Se=iX[0x002];end;end;else do if GX>=0x0057 then if GX~=88 then do(ge)[iX[2]]=nil;end;else do ge[iX[0x2]]=Ne[iX[6]];end;end;else ge[iX[2]]=ge[iX[0x05]]<ge[iX[0X4]];end;end;end;else if GX<0X5c then if GX<0X5A then ge[iX[0X2]]=ge[iX[5]]~=iX[0X1];else if GX==91 then local qG,eG=iX[2],((iX[4]-1)*50);local fG=(ge[qG]);for SK=0X1,iX[5]do do(fG)[eG+SK]=ge[qG+SK];end;end;else do if not(ge[iX[0x0005]]<=ge[iX[4]])then else Se=iX[0X2];end;end;end;end;else if GX<93 then local VF=iX[0x0002];local LF,XF=ge[VF]();if not(LF)then else for uJ=0x1,iX[4]do do(ge)[VF+uJ]=XF[uJ];end;end;Se=iX[5];end;else do if GX~=0X5e then ge[iX[0X2]]=ge[iX[0X5]]/ge[iX[0x0004]];else ge[iX[0X2]]=ge[iX[5]]/iX[1];end;end;end;end;end;else if not(GX<0x4d)then do if not(GX<0X00050)then if GX<81 then local KU=(TV[iX[0X5]]);do ge[iX[2]]=KU[0x001][KU[0X0002]];end;else do if GX==82 then(ge)[iX[2]]=iX[0X6];else local VV=(iX[0X00002]);local BV,WV,AV=ge[VV]();if not(BV)then else(ge)[VV+1]=WV;(ge)[VV+2]=AV;Se=iX[5];end;end;end;end;else if GX>=78 then if GX~=0x04f then local uV=iX[0X05];local bV=ge[uV];do for cY=uV+1,iX[0x4]do do bV=bV..ge[cY];end;end;end;do ge[iX[2]]=bV;end;else local UY=(iX[2]);ge[UY](ge[UY+1]);te=UY-0x1;end;else ge[iX[0X2]]=not ge[iX[0X0005]];end;end;end;else if GX>=74 then if GX>=75 then do if GX~=0X4C then ZF[iX[5]]=ge[iX[2]];else Ne[iX[0X006]]=ge[iX[0x2]];end;end;else if iX[0x00004]==38 then Se=Se-1;PV[Se]={[3]=87,[2]=(iX[2]-182),[5]=(iX[0X5]-182)};else do repeat local bN,iN=pV,ge;if not(#bN>0)then else local MY={};for s4,y4 in P,bN do for ex,zx in P,y4 do if zx[0X1]==iN and zx[0X2]>=0 then local c4=(zx[2]);if not MY[c4]then(MY)[c4]={iN[c4]};end;(zx)[0X1]=MY[c4];do zx[0X2]=0X1;end;end;end;end;end;until true;end;return;end;end;else if GX<72 then repeat local t3,C3=pV,ge;if not(#t3>0X00)then else local Ro=({});for bQ,NQ in P,t3 do for RG,nG in P,NQ do do if nG[1]==C3 and nG[2]>=0 then local rH=nG[2];if not Ro[rH]then do(Ro)[rH]={C3[rH]};end;end;nG[0X1]=Ro[rH];(nG)[2]=1;end;end;end;end;end;until true;return true,iX[0x002],0X0000;else do if GX==0X00049 then(ge)[iX[0X2]]={g({},0X1,iX[5])};else do if iX[4]~=42 then(ge)[iX[2]]=#ge[iX[0X5]];else do Se=Se-0X00001;end;PV[Se]={[5]=(iX[5]-0X0002B),[2]=(iX[0x2]-43),[0x003]=0X1e};end;end;end;end;end;end;end;end;end;end;else if not(GX>=0X00017)then if not(GX>=0XB)then do if GX>=5 then if not(GX>=8)then if GX<6 then(ge)[iX[2]]=ge[iX[0x05]]==ge[iX[4]];else if GX==0X007 then ge[iX[0x2]]={};else if not(ge[iX[5]]<=iX[0X1])then Se=iX[0X002];end;end;end;else do if not(GX<0X009)then if GX==10 then if iX[0x4]==47 then Se=Se-0X00001;PV[Se]={[0X0002]=(iX[0X2]-55),[0X5]=(iX[5]-0X0037),[3]=0X0019};elseif iX[4]==0X5f then Se=Se-0x1;(PV)[Se]={[0x0005]=(iX[0x5]-0X0),[3]=87,[2]=(iX[0X00002]-0X0000)};else local lt=(iX[0x2]);for lu=lt,lt+(iX[5]-1)do(ge)[lu]=de[JV+(lu-lt)+1];end;end;else local nt=iX[0X02];ge[nt]=ge[nt](ge[nt+0x1],ge[nt+0X2]);te=nt;end;else ge[iX[0X00002]]=ge[iX[0X00005]]>ge[iX[0x4]];end;end;end;else if GX>=2 then if GX<0x3 then local Dw=(iX[0x2]);local Xw=Xe-JV;do if not(Xw<0)then else Xw=-0X1;end;end;for lz=Dw,Dw+Xw do ge[lz]=de[JV+(lz-Dw)+0x1];end;te=Dw+Xw;else if GX~=4 then ge[iX[2]]=c(ge[iX[5]],ge[iX[4]]);else do(ge)[iX[0x0002]]=false;end;end;end;else if GX==0x1 then repeat local WI,sI=pV,ge;if#WI>0X0 then local Id={};for YB,uB in P,WI do do for Fk,ak in P,uB do if ak[0X1]==sI and ak[0X0002]>=0X0 then local pc=ak[2];if not(not Id[pc])then else(Id)[pc]={sI[pc]};end;ak[0X00001]=Id[pc];(ak)[2]=0X1;end;end;end;end;end;until true;return false,iX[2],te;else local nk=(iX[2]);ge[nk]=ge[nk](g(ge,nk+1,te));do te=nk;end;end;end;end;end;else if GX>=0X0011 then if not(GX<20)then if not(GX>=0X15)then if ge[iX[0X5]]==iX[1]then else Se=iX[0x00002];end;else if GX~=22 then local el=(iX[0X02]);local vl,hl=ge[el]();if not(vl)then else Se=iX[0X5];do ge[el+3]=hl;end;end;else repeat local uV,SV=pV,(ge);if#uV>0 then local tn={};for Kp,Yp in P,uV do for rb,Ob in P,Yp do if Ob[1]==SV and Ob[2]>=0 then local hH=(Ob[0X2]);if not tn[hH]then(tn)[hH]={SV[hH]};end;Ob[0X1]=tn[hH];(Ob)[0x2]=1;end;end;end;end;until true;do return true,iX[2],1;end;end;end;else if GX<0X00012 then local JX=(iX[0X002]);local bX,SX=ge[JX]();if not(bX)then else do ge[JX+0x1]=SX;end;do Se=iX[0X5];end;end;else if GX~=19 then for kx=iX[0X002],iX[5]do(ge)[kx]=nil;end;else if ge[iX[2]]then do Se=iX[5];end;end;end;end;end;else if not(GX<14)then if GX<0Xf then Re[iX[5]]=ge[iX[0x2]];else if GX==16 then te=iX[2];ge[te]();do te=te-0x0001;end;else ge[iX[0x2]][iX[6]]=ge[iX[4]];end;end;else do if GX>=12 then if GX==13 then do Se=iX[0X5];end;else local HQ=(iX[0X2]);te=HQ+iX[5]-1;(ge)[HQ]=ge[HQ](g(ge,HQ+0X01,te));do te=HQ;end;end;else local gW=(iX[0x005]);do ge[iX[2]]=ge[gW]..ge[gW+1];end;end;end;end;end;end;else if GX>=35 then if GX<0x29 then if not(GX<38)then if not(GX>=39)then ge[iX[2]]=S(ge[iX[0X5]],ge[iX[0X4]]);else if GX~=0X000028 then local B6=(ge[iX[5]]/ge[iX[0x4]]);ge[iX[2]]=B6-B6%1;else ge[iX[0X2]]=ge[iX[0X5]]>=ge[iX[4]];end;end;else do if GX<36 then(ge)[iX[0X2]]=ge[iX[0X5]]%ge[iX[0X4]];else if GX==0X025 then ge[iX[2]]=ge[iX[0X005]][ge[iX[4]]];else ge[iX[2]]=ge[iX[0X5]]-ge[iX[0X4]];end;end;end;end;else do if GX>=0x2C then if not(GX<0X002D)then if GX~=0X00002E then local tk,Uk=iX[2],ge[iX[0x5]];ge[tk+0X1]=Uk;ge[tk]=Uk[iX[0X1]];else local vX=(iX[0X2]);(ge[vX])(g(ge,vX+0X001,te));te=vX-1;end;else(ge[iX[2]])[ge[iX[0x5]]]=iX[1];end;else if not(GX<0X2a)then if GX~=43 then(ge)[iX[2]]=true;else ge[iX[0X2]]=ge[iX[0X5]][iX[0X00001]];end;else local Ax=iX[0x2];(ge)[Ax]=ge[Ax](ge[Ax+0x1]);do te=Ax;end;end;end;end;end;else if GX<29 then do if GX>=0x1a then if GX>=27 then if GX==28 then ge[iX[0X2]]=ZF[iX[5]];else do ge[iX[2]]=R(ge[iX[0X5]],ge[iX[0X00004]]);end;end;else do ge[iX[0x00002]]=ge[iX[0x5]]<=ge[iX[0X004]];end;end;else if GX<24 then(ge)[iX[2]]=ge[iX[0X00005]]^ge[iX[4]];else do if GX==25 then ge[iX[0X02]]=-ge[iX[5]];else if not(not(ge[iX[0X05]]<iX[1]))then else Se=iX[2];end;end;end;end;end;end;else if GX<0X0020 then if GX<0X1e then ge[iX[0x00002]]=ge[iX[5]]*ge[iX[4]];else do if GX~=31 then ge[iX[0x02]]=ge[iX[0x5]];else local YJ=(iX[0X2]);local cJ=(U(function(...)(m)();for Ul in...do(m)(true,Ul);end;end));cJ(ge[YJ],ge[YJ+0X1],ge[YJ+0X2]);te=YJ;do ge[YJ]=cJ;end;Se=iX[0X5];end;end;end;else if GX>=33 then if GX~=34 then do repeat local uX,IX=pV,(ge);if not(#uX>0x0)then else local IB={};do for RX,eX in P,uX do do for Ih,Zh in P,eX do if Zh[0x1]==IX and Zh[2]>=0x000 then local dA=(Zh[2]);if not(not IB[dA])then else IB[dA]={IX[dA]};end;Zh[1]=IB[dA];(Zh)[2]=1;end;end;end;end;end;end;until true;end;local Ki=iX[2];return false,Ki,Ki+iX[0x5]-0X2;else if iX[4]==0x3C then Se=Se-1;PV[Se]={[2]=(iX[2]-57),[0x00003]=87,[5]=(iX[5]-57)};else repeat local Bu,Mu=pV,(ge);if#Bu>0x0 then local h4=({});for bP,xP in P,Bu do for DY,BY in P,xP do if not(BY[1]==Mu and BY[0X00002]>=0)then else local sv=(BY[0X2]);if not h4[sv]then do(h4)[sv]={Mu[sv]};end;end;BY[0X001]=h4[sv];(BY)[2]=1;end;end;end;end;until true;local Pc=iX[0X0002];do return false,Pc,Pc;end;end;end;else do if iX[4]~=0X4D then if not(not ge[iX[2]])then else Se=iX[5];end;else Se=Se-1;PV[Se]={[0X2]=(iX[2]-0Xd7),[0X3]=0x48,[0X5]=(iX[0X00005]-215)};end;end;end;end;end;end;end;end;end;end;end);if Ze then do if me then if fe~=1 then return ge[be](g(ge,be+0X0001,te));else return ge[be]();end;elseif not(be)then else return g(ge,be,fe);end;end;else if x(me)~='str\105\110\103'then(Z)(me,0X0);else if a(me,'\097tt\101\109\112\116 \116\111\032yi\101ld a\099\114o\115\115\032\109eta\109\101t\104\111d\047C%-c\097l\108 \098\111un\100ar\121')then return coroutine.yield();end;if a(me,'^.-\058%d\043\058 ')then Z("Luraph Script:"..(EV[Se-1]or"(internal)")..": "..h(me),0);else(Z)(me,0);end;end;end;end;do if not(s)then else s(MV,YV);end;end;do return MV;end;end;end;else if not(CM<=0X0)then do if CM==1 then else xF={};end;end;else EF=function(wv)local vv,Mv=nil,(nil);local Xv=1;repeat do if Xv<=0X0 then Mv="";Xv=0X2;else do if Xv~=0X1 then for Fl=0X1,vv,7997 do local wl=(nil);local nl=0X0;while nl~=2 do if nl==0 then do wl=Fl+7997-0X1;end;do nl=1;end;else if wl>vv then wl=vv;end;nl=0X2;end;end;local Ll={r(Y,T+Fl-1,T+wl-0X001)};nl=0X0000;while nl<2 do if nl==0x0 then for yl=0X1,#Ll do(Ll)[yl]=S(Ll[yl],eF);do eF=(wv*eF+11)%256;end;end;nl=0X1;else Mv=Mv..W(g(Ll));nl=0X2;end;end;end;Xv=3;else vv=w();Xv=0X00000;end;end;end;end;until Xv>=0X3;for xP=0,1 do if xP~=0X0 then return Mv;else do T=T+vv;end;end;end;end;end;end;end;end;BF=0X2;while true do if not(BF<=0)then if BF~=0X1 then ZF[0X2]=xF;BF=0X00001;else do xF=nil;end;BF=0X0;end;else return AF(IF,D,WF)(...);end;end;end)(0Xe,table,'rshif\116',15,bit32,tostring,unpack,coroutine,0Xc,string,11,8,"\098\120o\114",string.match,0Xa,string.char,'\098\110\111t',select,"\098\111\114",0x000,32,4,getfenv,'','b\097\110d',nil,33,7,tonumber,5,string.gsub,2,1,0X3,0xd4,setmetatable,{47799,2138685009,3316017955,0xf530604f,1367712064,1715891715,0X006d44a8A0,0X36E20b73,0X3CcfE18},...);
